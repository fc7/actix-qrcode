---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: qrcode-actix
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[pull_request, push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[master]"

    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    # pipelinesascode.tekton.dev/task: "git-clone"

    # pipelinesascode.tekton.dev/task-1: "buildah"

    # pipelinesascode.tekton.dev/task-2: "kn"

    # How many runs we want to keep.
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: APP_NAME
      value: qrcode-actix  
    - name: IMAGE_NAME
      # value: quay.io/rh_ee_fcharett/qrcode-actix
      value: image-registry.openshift-image-registry.svc:5000/default/qrcode-actix
    - name: DOCKERFILE_PATH
      value: ./Dockerfile.ubi9
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
      - name: basic-auth
    tasks:
      - name: fetch-repository
        taskRef:
          resolver: cluster
          params:
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines
          - name: kind
            value: task
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: URL
            value: $(params.repo_url)
          - name: REVISION
            value: $(params.revision)
      - name: build-image
        runAfter:
          - fetch-repository
        taskRef:
          resolver: cluster
          params:
          - name: name
            value: buildah
          - name: namespace
            value: openshift-pipelines
          - name: kind
            value: task
        params:
          - name: DOCKERFILE
            value: $(params.DOCKERFILE_PATH)
          - name: IMAGE
            value: $(params.IMAGE_NAME)
          - name: TLSVERIFY
            value: 'false'
          - name: SKIP_PUSH
            value: 'false'
        workspaces:
          - name: source
            workspace: source
          # - name: dockerconfig
          #   workspace: dockerconfig
      - name: kn-service-apply
        params:
        - name: ARGS
          value:
            - service
            - apply
            - $(params.APP_NAME)
            - '--image=$(params.IMAGE_NAME)@$(tasks.build-image.results.IMAGE_DIGEST)'
        runAfter:
            - build-image
        taskRef:
          resolver: cluster
          params:
          - name: name
            value: kn
          - name: namespace
            value: openshift-pipelines
          - name: kind
            value: task
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  # This workspace will inject secret to help the git-clone task to be able to
  # checkout the private repositories
  - name: basic-auth
    secret:
      secretName: "{{ git_auth_secret }}"
  # This is needed to be able to push to quay.io:
  # - name: dockerconfig
  #   secret:
  #     secretName: container-registry-secret
